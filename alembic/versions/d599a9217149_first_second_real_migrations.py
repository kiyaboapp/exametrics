"""First Second  Real Migrations

Revision ID: d599a9217149
Revises: 0c50564a0e1c
Create Date: 2025-07-20 10:22:44.598510

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd599a9217149'
down_revision: Union[str, Sequence[str], None] = '0c50564a0e1c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exam_boards',
    sa.Column('board_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('chairman', sa.String(length=100), nullable=True),
    sa.Column('secretary', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('board_id')
    )
    op.create_table('regions',
    sa.Column('region_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('region_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('region_id'),
    sa.UniqueConstraint('region_name')
    )
    op.create_table('subjects',
    sa.Column('subject_code', sa.String(length=10), nullable=False),
    sa.Column('subject_name', sa.String(length=50), nullable=False),
    sa.Column('subject_short', sa.String(length=50), nullable=False),
    sa.Column('has_practical', sa.Boolean(), nullable=False),
    sa.Column('exclude_from_gpa', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('subject_code')
    )
    op.create_table('councils',
    sa.Column('council_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('council_name', sa.String(length=50), nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['region_id'], ['regions.region_id'], onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('council_id')
    )
    op.create_table('exams',
    sa.Column('exam_id', sa.String(length=36), nullable=False),
    sa.Column('board_id', sa.String(length=36), nullable=False),
    sa.Column('exam_name', sa.String(length=100), nullable=False),
    sa.Column('exam_name_swahili', sa.String(length=100), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('avg_style', sa.Enum('AUTO', 'SEVEN_BEST', 'EIGHT_BEST', name='avgstyle'), nullable=False),
    sa.Column('exam_level', sa.Enum('STNA', 'SFNA', 'PSLE', 'FTNA', 'CSEE', 'ACSEE', name='examlevel'), nullable=False),
    sa.ForeignKeyConstraint(['board_id'], ['exam_boards.board_id'], onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('exam_id')
    )
    op.create_table('exam_divisions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('exam_id', sa.String(length=36), nullable=True),
    sa.Column('division', sa.String(length=3), nullable=False),
    sa.Column('lowest_points', sa.Integer(), nullable=False),
    sa.Column('highest_points', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['exam_id'], ['exams.exam_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('exam_id', 'division')
    )
    op.create_table('exam_grades',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('exam_id', sa.String(length=36), nullable=True),
    sa.Column('grade', sa.String(length=2), nullable=False),
    sa.Column('lower_value', sa.Float(), nullable=False),
    sa.Column('highest_value', sa.Float(), nullable=False),
    sa.Column('grade_points', sa.Float(), nullable=False),
    sa.Column('division_points', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['exam_id'], ['exams.exam_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('exam_id', 'grade')
    )
    op.create_table('exam_subjects',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('exam_id', sa.String(length=36), nullable=True),
    sa.Column('subject_code', sa.String(length=10), nullable=True),
    sa.Column('subject_name', sa.String(length=50), nullable=False),
    sa.Column('subject_short', sa.String(length=50), nullable=False),
    sa.Column('has_practical', sa.Boolean(), nullable=False),
    sa.Column('exclude_from_gpa', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['exam_id'], ['exams.exam_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subject_code'], ['subjects.subject_code'], onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('exam_id', 'subject_code')
    )
    op.create_table('wards',
    sa.Column('ward_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ward_name', sa.String(length=100), nullable=False),
    sa.Column('council_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['council_id'], ['councils.council_id'], onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('ward_id')
    )
    op.create_table('schools',
    sa.Column('centre_number', sa.String(length=10), nullable=False),
    sa.Column('school_name', sa.String(length=100), nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('council_id', sa.Integer(), nullable=True),
    sa.Column('ward_id', sa.Integer(), nullable=True),
    sa.Column('region_name', sa.String(length=50), nullable=True),
    sa.Column('council_name', sa.String(length=50), nullable=True),
    sa.Column('ward_name', sa.String(length=100), nullable=True),
    sa.Column('school_type', sa.Enum('GOVERNMENT', 'PRIVATE', 'UNKNOWN', name='schooltype'), nullable=False),
    sa.ForeignKeyConstraint(['council_id'], ['councils.council_id'], onupdate='CASCADE'),
    sa.ForeignKeyConstraint(['region_id'], ['regions.region_id'], onupdate='CASCADE'),
    sa.ForeignKeyConstraint(['ward_id'], ['wards.ward_id'], onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('centre_number')
    )
    op.create_table('students',
    sa.Column('student_global_id', sa.String(length=36), nullable=False),
    sa.Column('exam_id', sa.String(length=36), nullable=False),
    sa.Column('student_id', sa.String(length=20), nullable=False),
    sa.Column('centre_number', sa.String(length=10), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('middle_name', sa.String(length=50), nullable=True),
    sa.Column('surname', sa.String(length=50), nullable=False),
    sa.Column('sex', sa.Enum('MALE', 'FEMALE', 'OTHER', name='sex'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['centre_number'], ['schools.centre_number'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['exam_id'], ['exams.exam_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('student_global_id'),
    sa.UniqueConstraint('exam_id', 'student_id', 'centre_number')
    )
    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('middle_name', sa.String(length=255), nullable=True),
    sa.Column('surname', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('USER', 'TEACHER', 'ACADEMIC_MASTER', 'HEAD_OF_SCHOOL', 'WEO', 'DEO', 'REO', 'ADMIN', name='role'), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('centre_number', sa.String(length=10), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['centre_number'], ['schools.centre_number'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('results',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('exam_id', sa.String(length=36), nullable=True),
    sa.Column('student_global_id', sa.String(length=36), nullable=True),
    sa.Column('centre_number', sa.String(length=10), nullable=True),
    sa.Column('avg_marks', sa.Float(), nullable=True),
    sa.Column('total_marks', sa.Float(), nullable=True),
    sa.Column('division', sa.String(length=3), nullable=True),
    sa.Column('total_points', sa.Integer(), nullable=True),
    sa.Column('pos', sa.Integer(), nullable=True),
    sa.Column('out_of', sa.Integer(), nullable=True),
    sa.Column('ward_pos', sa.Integer(), nullable=True),
    sa.Column('ward_out_of', sa.Integer(), nullable=True),
    sa.Column('council_pos', sa.Integer(), nullable=True),
    sa.Column('council_out_of', sa.Integer(), nullable=True),
    sa.Column('region_pos', sa.Integer(), nullable=True),
    sa.Column('region_out_of', sa.Integer(), nullable=True),
    sa.Column('ward_pos_gvt', sa.Integer(), nullable=True),
    sa.Column('ward_pos_pvt', sa.Integer(), nullable=True),
    sa.Column('council_pos_gvt', sa.Integer(), nullable=True),
    sa.Column('council_pos_pvt', sa.Integer(), nullable=True),
    sa.Column('region_pos_gvt', sa.Integer(), nullable=True),
    sa.Column('region_pos_pvt', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['centre_number'], ['schools.centre_number'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['exam_id'], ['exams.exam_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_global_id'], ['students.student_global_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('exam_id', 'student_global_id', 'centre_number')
    )
    op.create_index('idx_result_centre_number', 'results', ['centre_number'], unique=False)
    op.create_index('idx_result_exam_id', 'results', ['exam_id'], unique=False)
    op.create_index('idx_result_student_global_id', 'results', ['student_global_id'], unique=False)
    op.create_table('student_subjects',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('exam_id', sa.String(length=36), nullable=True),
    sa.Column('student_global_id', sa.String(length=36), nullable=True),
    sa.Column('centre_number', sa.String(length=10), nullable=True),
    sa.Column('subject_code', sa.String(length=10), nullable=True),
    sa.Column('theory_marks', sa.Float(), nullable=True),
    sa.Column('practical_marks', sa.Float(), nullable=True),
    sa.Column('overall_marks', sa.Float(), nullable=True),
    sa.Column('subject_pos', sa.Integer(), nullable=True),
    sa.Column('subject_out_of', sa.Integer(), nullable=True),
    sa.Column('ward_subject_pos', sa.Integer(), nullable=True),
    sa.Column('ward_subject_out_of', sa.Integer(), nullable=True),
    sa.Column('council_subject_pos', sa.Integer(), nullable=True),
    sa.Column('council_subject_out_of', sa.Integer(), nullable=True),
    sa.Column('region_subject_pos', sa.Integer(), nullable=True),
    sa.Column('region_subject_out_of', sa.Integer(), nullable=True),
    sa.Column('ward_subject_pos_gvt', sa.Integer(), nullable=True),
    sa.Column('ward_subject_pos_pvt', sa.Integer(), nullable=True),
    sa.Column('council_subject_pos_gvt', sa.Integer(), nullable=True),
    sa.Column('council_subject_pos_pvt', sa.Integer(), nullable=True),
    sa.Column('region_subject_pos_gvt', sa.Integer(), nullable=True),
    sa.Column('region_subject_pos_pvt', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['centre_number'], ['schools.centre_number'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['exam_id'], ['exams.exam_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_global_id'], ['students.student_global_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subject_code'], ['exam_subjects.subject_code'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('exam_id', 'student_global_id', 'centre_number', 'subject_code')
    )
    op.create_index('idx_student_subject_centre_number', 'student_subjects', ['centre_number'], unique=False)
    op.create_index('idx_student_subject_exam_id', 'student_subjects', ['exam_id'], unique=False)
    op.create_index('idx_student_subject_student_global_id', 'student_subjects', ['student_global_id'], unique=False)
    op.create_index('idx_student_subject_subject_code', 'student_subjects', ['subject_code'], unique=False)
    op.create_table('user_exams',
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('exam_id', sa.String(length=36), nullable=False),
    sa.Column('role', sa.Enum('VIEWER', 'UPLOADER', 'EXAM_ADMIN', name='userexamrole'), nullable=False),
    sa.Column('permissions', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['exam_id'], ['exams.exam_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'exam_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_exams')
    op.drop_index('idx_student_subject_subject_code', table_name='student_subjects')
    op.drop_index('idx_student_subject_student_global_id', table_name='student_subjects')
    op.drop_index('idx_student_subject_exam_id', table_name='student_subjects')
    op.drop_index('idx_student_subject_centre_number', table_name='student_subjects')
    op.drop_table('student_subjects')
    op.drop_index('idx_result_student_global_id', table_name='results')
    op.drop_index('idx_result_exam_id', table_name='results')
    op.drop_index('idx_result_centre_number', table_name='results')
    op.drop_table('results')
    op.drop_table('users')
    op.drop_table('students')
    op.drop_table('schools')
    op.drop_table('wards')
    op.drop_table('exam_subjects')
    op.drop_table('exam_grades')
    op.drop_table('exam_divisions')
    op.drop_table('exams')
    op.drop_table('councils')
    op.drop_table('subjects')
    op.drop_table('regions')
    op.drop_table('exam_boards')
    # ### end Alembic commands ###
